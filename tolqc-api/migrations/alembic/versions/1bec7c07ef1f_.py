"""empty message

Revision ID: 1bec7c07ef1f
Revises: a998db198ad4
Create Date: 2022-07-05 08:44:34.409476

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1bec7c07ef1f'
down_revision = 'a998db198ad4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accession', sa.Column('accession_type_id', sa.Integer(), nullable=True))
    op.drop_constraint('accession_accession_type_dict_id_fkey', 'accession', type_='foreignkey')
    op.create_foreign_key(None, 'accession', 'accession_type_dict', ['accession_type_id'], ['id'])
    op.drop_column('accession', 'accession_type_dict_id')
    op.add_column('accession_type_dict', sa.Column('description', sa.String(), nullable=True))
    op.alter_column('accession_type_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'accession_type_dict', ['name'])
    op.alter_column('assembly_component', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'assembly_component', ['name'])
    op.alter_column('milestone_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'milestone_dict', ['name'])
    op.alter_column('qc_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'qc_dict', ['name'])
    op.add_column('sex', sa.Column('description', sa.String(), nullable=True))
    op.alter_column('sex', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'sex', ['name'])
    op.alter_column('status_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'status_dict', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'status_dict', type_='unique')
    op.alter_column('status_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'sex', type_='unique')
    op.alter_column('sex', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('sex', 'description')
    op.drop_constraint(None, 'qc_dict', type_='unique')
    op.alter_column('qc_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'milestone_dict', type_='unique')
    op.alter_column('milestone_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'assembly_component', type_='unique')
    op.alter_column('assembly_component', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'accession_type_dict', type_='unique')
    op.alter_column('accession_type_dict', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('accession_type_dict', 'description')
    op.add_column('accession', sa.Column('accession_type_dict_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'accession', type_='foreignkey')
    op.create_foreign_key('accession_accession_type_dict_id_fkey', 'accession', 'accession_type_dict', ['accession_type_dict_id'], ['id'])
    op.drop_column('accession', 'accession_type_id')
    # ### end Alembic commands ###
